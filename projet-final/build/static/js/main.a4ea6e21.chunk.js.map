{"version":3,"sources":["assets/images/rickandmorty-homepage.png","assets/images/homepage-blob.svg","assets/images/character-bg.svg","assets/images/character-single-bg.svg","assets/images/morty-snout.png","assets/images/pickle-rick.gif","components/modals/NavigationModal.js","components/Navigation.js","components/Footer.js","screens/BaseScreen.js","screens/HomepageScreen.js","screens/PageNotFound.js","constantes.js","components/modals/CharacterAddModal.js","screens/CharacterScreen.js","components/modals/CharacterEditModal.js","components/modals/CharacterDeleteModal.js","screens/CharacterSingleScreen.js","App.js","serviceWorker.js","index.js","assets/images/default-empty.jpeg"],"names":["module","exports","NavigationModal","props","useState","modal","setModal","toggle","closeBtn","className","onClick","Button","color","Modal","isOpen","size","modalClassName","ModalHeader","close","ModalBody","Navbar","Nav","navbar","NavItem","to","Navigation","Wrapper","expand","NavbarBrand","href","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","disabled","styled","div","Footer","Container","BaseScreen","children","HomepageScreen","Row","Col","md","src","HomeImg","alt","imgBg","PageNotFound","history","useHistory","require","goBack","API","withRouter","getCharacter","setState","photos","setPhotos","nom","statut","genre","espece","type","origine","emplacement","photo","id","a","fetch","method","headers","body","JSON","stringify","name","status","gender","species","origin","location","image","response","console","log","ok","push","toast","success","Error","ModalWrapper","onValidSubmit","event","values","preventDefault","addCharacter","document","getElementById","value","onInvalidSubmit","errors","nom_personnage","form","style","backgroundImage","Default","FormGroup","Label","for","Input","placeholder","onBlur","FormText","required","errorMessage","ModalFooter","donneesRecues","setDonneesRecues","json","reponseDeApi","statusText","useEffect","map","index","_id","key","Card","CardBody","CardTitle","CardSubtitle","cardBg","getCharacterInfos","characterId","useParams","type_espece","Form","defaultValue","editCharacter","error","deleteImg","isLoading","setIsLoading","singleCharacterBg","App","autoClose","hideProgressBar","path","exact","component","CharacterScreen","CharacterSingleScreen","Boolean","window","hostname","match","ReactDOM","render","Fragment","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a4ea6e21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rickandmorty-homepage.538304cb.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage-blob.af16f80a.svg\";","module.exports = __webpack_public_path__ + \"static/media/character-bg.9c317859.svg\";","module.exports = __webpack_public_path__ + \"static/media/character-single-bg.0c85682b.svg\";","module.exports = __webpack_public_path__ + \"static/media/morty-snout.6dfd0238.png\";","module.exports = __webpack_public_path__ + \"static/media/pickle-rick.fb50a355.gif\";","import React, { useState } from \"react\";\nimport { NavLink } from 'react-router-dom'\nimport { Button, Modal, ModalHeader, ModalBody, Navbar, Nav, NavItem } from 'reactstrap';\nimport { FiX, FiMenu } from 'react-icons/fi'\n\n\nconst NavigationModal = (props) => {\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const closeBtn = <button className=\"close\" onClick={toggle}><FiX /></button>;\n\n    return (\n        <div className=\"modal-navigation-wrapper\">\n            <Button color=\"icon-nav\" onClick={toggle}>\n                <FiMenu />\n            </Button>\n            <Modal isOpen={modal} toggle={toggle} className=\"navigation-mobile-modal\" size=\"lg\" modalClassName=\"left\">\n                <ModalHeader toggle={toggle} close={closeBtn}></ModalHeader>\n                <ModalBody>\n                    <Navbar>\n                        <Nav navbar className=\"top-navigation\">\n                            <NavItem>\n                                <NavLink to=\"/character\" className=\"nav-link\">\n                                    Personnages\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to=\"#\" className=\"nav-link disabled\">\n                                    Planètes\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to=\"#\" className=\"nav-link disabled\">\n                                    Épisodes\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav navbar className=\"bottom-navigation\">\n                            <NavItem>\n                                <NavLink to=\"#\" className=\"nav-link disabled\">\n                                    Connexion\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to=\"#\" className=\"nav-link disabled\">\n                                    S'enregistrer\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Navbar>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nexport default NavigationModal;","import React from 'react';\nimport styled from 'styled-components/macro'\nimport { Link } from 'react-router-dom'\nimport NavigationModal from './modals/NavigationModal'\nimport { Navbar, NavbarBrand, Nav, NavItem, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst Navigation = () => {\n    return (\n        <Wrapper>\n            <Navbar expand=\"xs\" className=\"px-0\">\n                <NavbarBrand href=\"/\">\n                    Wik<span> & </span>Morty\n                </NavbarBrand>\n                <Nav className=\"navbar-center d-none d-lg-flex\" navbar>\n                    <UncontrolledDropdown nav inNavbar>\n                        <DropdownToggle nav caret>\n                            Informations\n                            </DropdownToggle>\n                        <DropdownMenu right>\n                            <Link to=\"/character\" className=\"dropdown-item\">\n                                Personnages\n                                </Link>\n                            <DropdownItem disabled>Planètes</DropdownItem>\n                            <DropdownItem disabled>Episodes</DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Nav>\n                <Nav className=\"navbar-right d-none d-lg-flex\" navbar>\n                    <NavItem>\n                        <Link to=\"#\" className=\"btn btn-theme-white\">Connexion</Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link to=\"#\" className=\"btn btn-theme-secondary-alt\">S'enregistrer</Link>\n                    </NavItem>\n                </Nav>\n                <div className=\"navigation-mobile-modal-wrapper d-lg-none\">\n                    <NavigationModal />\n                </div>\n            </Navbar>\n        </Wrapper>\n    );\n}\n\nexport default Navigation;\nconst Wrapper = styled.div`\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.navbar-brand {\n    font-size: 22px;\n    text-transform: uppercase;\n    color: #312651;\n    flex: 0 1 30%;\n    font-weight: 300;\n\n    span {\n        color: #8BD4F5;\n    }\n}\n\n.navbar-center {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 0 1 40%;\n}\n\n.navbar-right {\n    display: flex;\n    justify-content: flex-end;\n    flex: 0 1 30%;\n\n    .btn {\n        pointer-events: none;\n    }\n}\n\n.nav-link {\n    font-weight: 500;\n    color: #312651 !important;\n    &:hover {\n        background: \n    }\n}\n`\n","import React from 'react';\nimport styled from 'styled-components/macro'\nimport { Container } from 'reactstrap';\n\nconst Footer = () => {\n    return (\n        <Wrapper>\n            <Container>\n                <p>Projet Final - Francisca Vargas @ copyright.2020</p>\n            </Container>\n        </Wrapper>\n    );\n}\n\nexport default Footer;\nconst Wrapper = styled.div`\n@media(max-width:767.98px){\n    p{\n        font-size: 12px;\n    }\n}\n\n`\n","import React from 'react';\nimport styled from 'styled-components/macro'\nimport { Container } from 'reactstrap';\nimport Navigation from '../components/Navigation';\nimport Footer from '../components/Footer';\n\n\nconst BaseScreen = ({ children }) => {\n    return (\n        <Wrapper>\n            <Container>\n                <Navigation />\n            </Container>\n            <div className=\"page-wrapper\">\n                <Container>\n                    {children}\n                </Container>\n            </div>\n            <Footer />\n        </Wrapper>\n    );\n}\n\nexport default BaseScreen;\nconst Wrapper = styled.div``","import React from 'react';\nimport styled from 'styled-components/macro'\nimport BaseScreen from './BaseScreen';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'reactstrap';\nimport HomeImg from '../assets/images/rickandmorty-homepage.png'\nimport imgBg from '../assets/images/homepage-blob.svg'\n\nconst HomepageScreen = () => {\n    return (\n        <BaseScreen>\n            <Wrapper>\n                <Row className=\"align-content-stretch\">\n                    <Col md={6}>\n                        <div className=\"homepage-text-wrapper\">\n                            <div>\n                                <h1 className=\"display-4\">Le grand Wiki de la série Rick & Morty</h1>\n                                <p>Retrouvez toute la documentation de la série partagée gratuitement par nos utilisateurs et contribuez vous-même à l'enrichir en publiant ou modifiant de nouvelles informations!</p>\n                                <div className=\"button-container\">\n                                    <Link to=\"/character\" className=\"btn btn-theme-primary-alt\">Voir les informations</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={6}>\n                        <div className=\"homepage-img-wrapper\">\n                            <img src={HomeImg} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                    </Col>\n                </Row>\n            </Wrapper>\n        </BaseScreen>\n    );\n}\n\nexport default HomepageScreen;\n\nconst Wrapper = styled.div`\n.homepage-text-wrapper {\n    display: flex;\n    align-items: center;\n    height: 100%;\n\n    p {\n        font-size: 16px;\n        margin-bottom: 30px;\n    }\n}\n\n.homepage-img-wrapper {\n    height: 100%;\n    background-image: url(${imgBg});\n    background-repeat: no-repeat;\n    background-size: contain;\n}\n\n.button-container {\n    .btn:first-of-type {\n        margin-right: 15px;\n    }\n}\n@media(max-width: 991.98px) {\n    .homepage-text-wrapper {\n        h1 {\n            font-size: 36px;\n        }\n    }\n}\n\n@media(max-width: 767.98px) {\n    .homepage-text-wrapper {\n        padding-bottom: 60px;\n\n        h1 {\n            font-size: 26px;\n        }\n        p {\n            font-size: 14px;\n        }\n    }\n}\n\n`","import React from 'react';\nimport styled from 'styled-components/macro';\nimport BaseScreen from './BaseScreen';\nimport { Row, Col, Button } from 'reactstrap';\nimport { useHistory } from 'react-router-dom'\nimport { FiArrowLeftCircle } from \"react-icons/fi\";\n\nconst PageNotFound = () => {\n    const history = useHistory();\n    return (\n        <BaseScreen>\n            <Wrapper>\n                <Row className=\"flex-column-reverse flex-md-row\">\n                    <Col md={6}>\n                        <img src={require('../assets/images/pickle-rick.gif')} alt=\"pickle rick...\" className=\"img-fluid\" />\n                    </Col>\n                    <Col md={6} className=\"text-center text-md-left mb-5 mb-md-0\">\n                        <h1 className=\"display-1 mb-0\"><span className=\"underline--magical\">404</span></h1>\n                        <h2 className=\"mb-5\">Oh ben! On dirait que cette page n'existe pas...</h2>\n                        <Button onClick={() => history.goBack()} className=\"btn btn-theme-primary-alt\">\n                            <span className=\"icon\"><FiArrowLeftCircle /></span>\n                            Retour\n                        </Button>\n                    </Col>\n                </Row>\n            </Wrapper>\n        </BaseScreen>\n    );\n}\n\nexport default PageNotFound;\nconst Wrapper = styled.div`\n.display-1 {\n    font-size: 10rem;\n}\n\n@media(max-width: 991.98px) {\n    .display-1 {\n        font-size: 70px;\n    }\n\n    h2 {\n        font-size: 24px;\n    }\n}\n\n@media(max-width: 767.98px) {\n\n}\n\n\n\n`","export const API = \"https://crudcrud.com/api/6e52d655bde84e9bbda5933345d200e7/characters/\";","import React, { useState } from \"react\";\nimport { withRouter, useHistory } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { Row, Col, Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { FiPlus, FiX } from 'react-icons/fi'\nimport { API } from \"../../constantes\";\nimport { toast } from \"react-toastify\"\nimport Default from \"../../assets/images/default-empty.jpeg\"\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nconst CharacterAddModal = (props) => {\n    const { getCharacter } = props;\n    const [modal, setModal] = useState(false);\n    const [state, setState] = useState({})\n    const toggle = () => setModal(!modal);\n    const closeBtn = <button className=\"close\" onClick={toggle}><FiX /></button>;\n    const [photos, setPhotos] = useState(\"\");\n    let history = useHistory();\n\n    async function addCharacter(nom, statut, genre, espece, type, origine, emplacement, photo, id) {\n        try {\n            const response = await fetch(API, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    /* id: id, */\n                    name: nom,\n                    status: statut,\n                    gender: genre,\n                    species: espece,\n                    type: type,\n                    origin: origine,\n                    location: emplacement,\n                    image: photo,\n                })\n            });\n\n            console.log({ response })\n            if (response.ok) {\n                history.push(\"/character\");\n                toast.success(\"Ajout du personnage \" + nom);\n                console.log(\"response\", response)\n                getCharacter();\n                return response;\n            }\n            throw new Error('Request failed!');\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    function handlePhoto(event) {\n        const photos = document.getElementById('photo_personnage').value;\n        setPhotos(photos);\n    }\n\n    function handleValidSubmit(event, values) {\n        event.preventDefault();\n        const nom = document.getElementById('nom_personnage').value;\n        const statut = document.getElementById('statut_personnage').value;\n        const genre = document.getElementById('genre_personnage').value;\n        const espece = document.getElementById('espece_personnage').value;\n        const type = document.getElementById('type_personnage').value;\n        const origine = document.getElementById('origine_personnage').value;\n        const emplacement = document.getElementById('emplacement_personnage').value;\n        const photo = document.getElementById('photo_personnage').value;\n\n        addCharacter(nom, statut, genre, espece, type, origine, emplacement, photo);\n        toggle();\n    }\n\n    function handleInvalidSubmit(event, errors, values) {\n        setState({\n            nom_personnage: values.nom_personnage,\n            errors: true,\n        });\n    }\n\n    return (\n        <div className=\"modal-add-wrapper\">\n            <Button color=\"cta-primary\" onClick={toggle}>\n                <span className=\"btn-icon-wrap\"><FiPlus /></span>\n                <span className=\"desktop-text\">Ajouter</span>\n            </Button>\n            <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-form\" size=\"lg\">\n                <ModalWrapper>\n                    <AvForm onValidSubmit={handleValidSubmit} onInvalidSubmit={handleInvalidSubmit}>\n                        <ModalHeader toggle={toggle} close={closeBtn}>Ajouter un personnage</ModalHeader>\n                        <ModalBody>\n                            <Row form>\n                                <Col md={12}>\n                                    <div className=\"modal-form-photo-wrapper\">\n                                        <div className=\"modal-character-image-wrapper\">\n                                            <div className=\"image-ratio-1\">\n                                                {photos ?\n                                                    <div className=\"img-wrapper\" style={{ backgroundImage: `url(${photos})` }}></div>\n                                                    : <div className=\"img-wrapper\" style={{ backgroundImage: `url(${Default})` }}></div>\n                                                }\n                                            </div>\n                                        </div>\n                                        <FormGroup className=\"w-100\">\n                                            <Label for=\"photo_personnage\">Photo</Label>\n                                            <Input type=\"url\" id=\"photo_personnage\" name=\"photo_personnage\" placeholder=\"Entrez un URL valide\" onBlur={handlePhoto} />\n                                            <FormText>Ex: https://rickandmortyapi.com/api/character/avatar/199.jpeg</FormText>\n                                        </FormGroup>\n                                    </div>\n                                </Col>\n                                <Col md={12}>\n                                    <FormGroup>\n                                        <Label for=\"nom_personnage\">Nom complet<span className=\"form-required\">*</span></Label>\n                                        <AvField type=\"text\" name=\"nom_personnage\" id=\"nom_personnage\" placeholder=\"Entrez le prénom et le nom\" required\n                                            errorMessage=\"Ce champs est requis\"\n                                        />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"genre_personnage\">Genre</Label>\n                                        <Input type=\"text\" name=\"genre_personnage\" id=\"genre_personnage\" placeholder=\"Entrez le genre\" />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"statut_personnage\">Statut</Label>\n                                        <Input type=\"text\" name=\"statut_personnage\" id=\"statut_personnage\" placeholder=\"Entrez le statut\" />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"espece_personnage\">Espèce</Label>\n                                        <Input type=\"text\" name=\"espece_personnage\" id=\"espece_personnage\" placeholder=\"Entrez l'espèce\" />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"type_personnage\">Type d'espèce</Label>\n                                        <Input type=\"text\" name=\"type_personnage\" id=\"type_personnage\" placeholder=\"Entrez le type d'espèce\" />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"origine_personnage\">Planète d'origine</Label>\n                                        <Input type=\"text\" name=\"origine_personnage\" id=\"origine_personnage\" placeholder=\"Nom de la planète d'origine\" />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"emplacement_personnage\">Emplacement Actuel</Label>\n                                        <Input type=\"text\" name=\"emplacement_personnage\" id=\"emplacement_personnage\" placeholder=\"Entrez l'emplacement actuel\" />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"theme-secondary\" onClick={toggle}>Annuler</Button>\n                            <Button color=\"theme-primary\" type=\"submit\">Ajouter</Button>\n                        </ModalFooter>\n                    </AvForm>\n                </ModalWrapper>\n            </Modal>\n        </div>\n    );\n}\n\nexport default withRouter(CharacterAddModal);\n\nconst ModalWrapper = styled.div``","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro'\nimport BaseScreen from './BaseScreen'\nimport { withRouter, Link } from 'react-router-dom';\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { API } from \"../constantes\";\nimport cardBg from '../assets/images/character-bg.svg'\nimport CharacterAddModal from '../components/modals/CharacterAddModal';\nimport Default from \"../assets/images/default-empty.jpeg\"\n\nconst CharacterScreen = () => {\n    const [donneesRecues, setDonneesRecues] = useState([]);\n\n    useEffect(() => {\n        getCharacter();\n    }, []);\n\n    async function getCharacter() {\n        try {\n            const response = await fetch(API);\n            const reponseDeApi = await response.json();\n            setDonneesRecues(reponseDeApi);\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <BaseScreen>\n            <Wrapper>\n                <div className=\"page-header\">\n                    <h1 className=\"page-title page-title-alt\">Personnages</h1>\n                    <CharacterAddModal getCharacter={getCharacter} />\n                </div>\n                <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-xl-3 character-row\">\n                    {donneesRecues.map((donneesRecues, index) => {\n                        const { _id, name, image, status, origin } = donneesRecues;\n                        return (\n                            <div key={_id} className=\"col character-col\">\n                                <Link to={'/character/' + _id}>\n                                    <Card>\n                                        <div className=\"card-inner\">\n                                            <div className=\"card-background\">\n                                                <div className=\"card-image-wrapper\">\n                                                    <div className=\"image-ratio-1\">\n                                                        {image === '' ?\n                                                            <div className=\"img-wrapper\" style={{ backgroundImage: `url(${Default})` }}></div>\n                                                            : <div className=\"img-wrapper\" style={{ backgroundImage: `url(${image})` }}></div>\n                                                        }\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-character-id\">\n                                                    <h4>{index + 1}</h4>\n                                                </div>\n                                            </div>\n                                            <CardBody>\n                                                <CardTitle>\n                                                    <h3 className=\"mb-0\">{name}</h3>\n                                                </CardTitle>\n                                                <CardSubtitle>\n                                                    <span className=\"character-page-field-title\">Statut:</span> {status} <br />\n                                                    <span className=\"character-page-field-title\">Origine:</span> {origin}\n                                                </CardSubtitle>\n                                            </CardBody>\n                                        </div>\n                                    </Card>\n                                </Link>\n                            </div>\n                        )\n                    })}\n                </div>\n            </Wrapper>\n        </BaseScreen >\n    );\n}\n\nexport default withRouter(CharacterScreen);\nconst Wrapper = styled.div`\n.character-row {\n    align-content: stretch;\n}\n\n.character-col {\n    margin-bottom: 30px;\n\n    a {\n        position: relative;\n        display: block;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        color: #9a9a9a;\n        border-radius: 10px;\n        box-shadow: 4px 4px 10px 0px rgba(0,0,0,0.2);\n        transform: scale(1);\n        transition: all .3s ease;\n\n        &:hover {\n            text-decoration: none;\n            transform: scale(1.05);\n            box-shadow: 10px 10px 10px 0px rgba(0,0,0,0.2);\n        }\n    }\n}\n\n.card {\n    display: flex;\n    flex-direction: column;\n    word-wrap: break-word;\n    background-image: url(${cardBg});\n    background-repeat: no-repeat;\n    background-size: 100%;\n    border: none;\n}\n\n.card-background {\n    position: relative;\n    width: 100%;\n    height: 91px;\n}\n\n.card-character-id {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    height: 50px;\n    width: 29px;\n    min-width: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #604CA5;\n    border-radius: 10px;\n\n    h4 {\n        margin-bottom: 0;\n        color: #fff;\n    }\n}\n\n.card-image-wrapper {\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    width: 100px;\n    z-index: 3;\n\n    .image-ratio-1 {\n        border-radius: 100%;\n        border: 5px solid #ffffff;\n    }\n}\n\n.card-body {\n    display: flex;\n    flex-direction: column;\n    padding: 50px 1.25rem 1.25rem;\n}\n\n.card-subtitle {\n    margin-bottom: 20px;\n    flex-grow: 1;\n}\n\n.button-container {\n    .btn:first-of-type {\n        margin-right: 10px;\n    }\n}\n\n@media(max-width: 767.98px) {\n    .page-header {\n        flex: direction: column;\n    }\n}\n\n`","import React, { useState } from \"react\";\nimport { useParams, withRouter } from 'react-router-dom'\nimport { Row, Col, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { FiEdit, FiX } from 'react-icons/fi';\nimport Default from \"../../assets/images/default-empty.jpeg\"\nimport { API } from \"../../constantes\";\nimport { toast } from \"react-toastify\"\n\nconst CharacterEditModal = (props) => {\n    const { donneesRecues, getCharacterInfos } = props;\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const closeBtn = <button className=\"close\" onClick={toggle}><FiX /></button>;\n    const characterId = useParams().id;\n    const [photos, setPhotos] = useState(\"\");\n\n    async function editCharacter(nom, statut, genre, espece, type_espece, origine, emplacement, photo, id) {\n        try {\n            const response = await fetch(API + characterId, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    /* id: id, */\n                    name: nom,\n                    status: statut,\n                    gender: genre,\n                    species: espece,\n                    type: type_espece,\n                    origin: origine,\n                    location: emplacement,\n                    image: photo,\n                })\n            });\n            if (response.ok) {\n                props.history.push(`/character/${characterId}`);\n                toast.success(\"Modification du personnage \" + nom);\n                getCharacterInfos()\n                return response;\n            }\n            throw new Error('Request failed!');\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    function handleEdit(event) {\n        event.preventDefault();\n\n        const nom = document.getElementById('nom_personnage').value;\n        const statut = document.getElementById('statut_personnage').value;\n        const genre = document.getElementById('genre_personnage').value;\n        const espece = document.getElementById('espece_personnage').value;\n        const type_espece = document.getElementById('type_personnage').value;\n        const origine = document.getElementById('origine_personnage').value;\n        const emplacement = document.getElementById('emplacement_personnage').value;\n        const photo = document.getElementById('photo_personnage').value;\n\n        editCharacter(nom, statut, genre, espece, type_espece, origine, emplacement, photo);\n        toggle()\n    }\n\n    function handlePhoto(event) {\n        const photos = document.getElementById('photo_personnage').value;\n        setPhotos(photos);\n    }\n\n    return (\n        <>\n            <Button color=\"cta-primary\" onClick={toggle}>\n                <span className=\"btn-icon-wrap\"><FiEdit /></span>\n                <span className=\"desktop-text\">Modifier</span>\n            </Button>\n            <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-form\" size=\"lg\">\n                <Form>\n                    <ModalHeader toggle={toggle} close={closeBtn}>Modifier le personnage</ModalHeader>\n                    <ModalBody>\n                        <Row form>\n                            <Col md={12}>\n                                <div className=\"modal-form-photo-wrapper\">\n                                    <div className=\"modal-character-image-wrapper\">\n                                        <div className=\"image-ratio-1\">\n                                            {photos\n                                                ? <div className=\"img-wrapper\" style={{ backgroundImage: `url(${photos})` }}></div>\n                                                : donneesRecues.image !== \"\"\n                                                    ? <div className=\"img-wrapper\" style={{ backgroundImage: `url(${donneesRecues.image})` }}></div>\n                                                    : <div className=\"img-wrapper\" style={{ backgroundImage: `url(${Default})` }}></div>\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <FormGroup className=\"w-100\">\n                                        <Label for=\"photo_personnage\">Photo</Label>\n                                        <Input type=\"url\" id=\"photo_personnage\" name=\"photo_personnage\" defaultValue={donneesRecues.image} onBlur={handlePhoto} placeholder=\"Entrez une URL valide\" />\n                                    </FormGroup>\n                                </div>\n                            </Col>\n                            <Col md={12}>\n                                <FormGroup>\n                                    <Label for=\"nom_personnage\">Nom complet</Label>\n                                    <Input type=\"text\" name=\"nom_personnage\" id=\"nom_personnage\" defaultValue={donneesRecues.name} placeholder=\"Entrez le prénom et le nom\" />\n                                </FormGroup>\n                            </Col>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"genre_personnage\">Genre</Label>\n                                    <Input type=\"text\" name=\"genre_personnage\" id=\"genre_personnage\" defaultValue={donneesRecues.gender} placeholder=\"Entrez le genre\" />\n                                </FormGroup>\n                            </Col>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"statut_personnage\">Statut</Label>\n                                    <Input type=\"text\" name=\"statut_personnage\" id=\"statut_personnage\" defaultValue={donneesRecues.status} placeholder=\"Entrez le statut\" />\n                                </FormGroup>\n                            </Col>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"espece_personnage\">Espèce</Label>\n                                    <Input type=\"text\" name=\"espece_personnage\" id=\"espece_personnage\" defaultValue={donneesRecues.species} placeholder=\"Entrez l'espèce\" />\n                                </FormGroup>\n                            </Col>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"type_personnage\">Type d'espèce</Label>\n                                    <Input type=\"text\" name=\"type_personnage\" id=\"type_personnage\" defaultValue={donneesRecues.type} placeholder=\"Entrez le type d'espèce\" />\n                                </FormGroup>\n                            </Col>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"origine_personnage\">Planète d'origine</Label>\n                                    <Input type=\"text\" name=\"origine_personnage\" id=\"origine_personnage\" defaultValue={donneesRecues.origin} placeholder=\"Nom de la planète d'origine\" />\n                                </FormGroup>\n                            </Col>\n                            <Col md={6}>\n                                <FormGroup>\n                                    <Label for=\"emplacement_personnage\">Emplacement Actuel</Label>\n                                    <Input type=\"text\" name=\"emplacement_personnage\" id=\"emplacement_personnage\" defaultValue={donneesRecues.location} placeholder=\"Entrez l'emplacement actuel\" />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"theme-secondary\" onClick={toggle}>Annuler</Button>\n                        <Button color=\"theme-primary\" type=\"submit\" onClick={handleEdit}>Modifier</Button>\n                    </ModalFooter>\n                </Form>\n            </Modal>\n        </>\n    );\n}\n\nexport default withRouter(CharacterEditModal);","import React, { useState } from \"react\";\nimport { useParams, withRouter } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FiTrash2, FiX } from 'react-icons/fi'\nimport deleteImg from '../../assets/images/morty-snout.png'\nimport { API } from \"../../constantes\";\nimport { toast } from \"react-toastify\"\n\nconst CharacterDeleteModal = (props) => {\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    const closeBtn = <button className=\"close\" onClick={toggle}><FiX /></button>;\n    const characterId = useParams().id;\n\n    async function removeCharacter() {\n        try {\n            const response = await fetch(API + characterId, {\n                method: 'delete',\n            });\n            if (response.ok) {\n                props.history.push(`/character`);\n                toggle()\n                toast.error(\"Suppression du personnage \");\n                return response;\n            }\n            throw new Error('Request failed!');\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className=\"modal-delete-wrapper\">\n            <Button color=\"cta-secondary\" onClick={toggle}>\n                <span className=\"btn-icon-wrap\"><FiTrash2 /></span>\n                <span className=\"desktop-text\">Supprimer</span>\n            </Button>\n            <Modal isOpen={modal} toggle={toggle} className=\"custom-modal-form\">\n                <ModalWrapper>\n                    <ModalHeader toggle={toggle} close={closeBtn}></ModalHeader>\n                    <ModalBody>\n                        <div className=\"modal-delete-content\">\n                            <img src={deleteImg} alt=\"delete\" className=\"img-fluid\" />\n                            <h3 className=\"mb-0\">Êtes-vous sûr de vouloir supprimer ce personnage?</h3>\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"theme-secondary\" onClick={toggle}>Annuler</Button>\n                        <Button color=\"theme-primary\" onClick={removeCharacter}>Supprimer</Button>\n                    </ModalFooter>\n                </ModalWrapper>\n            </Modal>\n        </div>\n    );\n}\n\nexport default withRouter(CharacterDeleteModal);\n\nconst ModalWrapper = styled.div`\n.modal-delete-content {\n    display: flex;\n    align-items: center;\n    padding: 0 5%;\n\n    img {\n        max-width: 125px;\n        margin-right: 30px;   \n    }\n\n    @media(max-width:575.98px) {\n        flex-direction: column;\n        align-items: center;\n\n        h3 {\n            font-size: 16px;\n            text-align: center;\n        }\n\n        img{\n            margin-right:0;\n            margin-bottom: 15px;\n        }\n    }\n}\n\n`","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro'\nimport { withRouter, useParams, Link } from 'react-router-dom'\nimport { API } from \"../constantes\";\nimport BaseScreen from './BaseScreen'\nimport { Row, Col } from 'reactstrap';\nimport CharacterEditModal from '../components/modals/CharacterEditModal';\nimport { FiArrowLeftCircle } from \"react-icons/fi\";\nimport singleCharacterBg from '../assets/images/character-single-bg.svg'\nimport CharacterDeleteModal from '../components/modals/CharacterDeleteModal';\nimport Default from \"../assets/images/default-empty.jpeg\"\n\nconst CharacterSingleScreen = () => {\n    const [donneesRecues, setDonneesRecues] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    const characterId = useParams().id;\n    /* const {id: characterId} = useParams() */\n\n    async function getCharacterInfos() {\n        setIsLoading(true)\n        try {\n            const response = await fetch(API + characterId);\n            const reponseDeApi = await response.json();\n            setDonneesRecues(reponseDeApi);\n            setIsLoading(false)\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n        } catch (error) {\n            console.log(error);\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        getCharacterInfos();\n        return () => { }\n    }, [characterId]);\n\n    console.log({ donneesRecues });\n\n    return (\n        <BaseScreen>\n            <Wrapper className=\"character-single-wrapper\">\n                {!isLoading && <div>\n                    <Row>\n                        <Col md=\"6\">\n                            <div className=\"character-single-image-wrapper\">\n                                <div className=\"image-ratio-1\">\n                                    {donneesRecues.image === \"\" ?\n                                        <div className=\"img-wrapper\" style={{ backgroundImage: `url(${Default})` }}></div>\n                                        : <div className=\"img-wrapper\" style={{ backgroundImage: `url(${donneesRecues.image})` }}></div>\n                                    }\n                                </div>\n                            </div>\n                        </Col>\n                        <Col md=\"6\" className=\"d-flex align-items-center\">\n                            <div className=\"character-single-info-wrapper\">\n                                <h2>{donneesRecues.name}</h2>\n                                <span className=\"character-page-field-title\">Statut</span>\n                                <p>{donneesRecues.status}</p>\n                                <span className=\"character-page-field-title\">Genre</span>\n                                <p>{donneesRecues.gender}</p>\n                                <span className=\"character-page-field-title\">Espèce</span>\n                                <p>{donneesRecues.species}</p>\n                                <span className=\"character-page-field-title\">Type</span>\n                                <p>{donneesRecues.type ? donneesRecues.type : \"--\"}</p>\n                                <span className=\"character-page-field-title\">Planète d'origine</span>\n                                <p>{donneesRecues.location}</p>\n                                <span className=\"character-page-field-title\">Emplacement</span>\n                                <p>{donneesRecues.origin}</p>\n                            </div>\n                        </Col>\n                    </Row>\n                    <div className=\"button-container\">\n                        <Link to=\"/character\" className=\"btn btn-theme-primary\"><span className=\"icon\"><FiArrowLeftCircle /></span>Retour</Link>\n                        <div className=\"button-container-cta-wrapper\">\n                            <CharacterDeleteModal />\n                            <CharacterEditModal getCharacterInfos={getCharacterInfos} donneesRecues={donneesRecues} />\n                        </div>\n                    </div>\n                </div>\n                }\n            </Wrapper>\n        </BaseScreen>\n    );\n}\n\nexport default withRouter(CharacterSingleScreen);\nconst Wrapper = styled.div`\npadding: 30px;\nborder-radius: 10px;\noverflow: hidden;\nbackground-image: url(${singleCharacterBg});\nbackground-repeat: no-repeat;\nbackground-size: 100%;\nbox-shadow: 4px 4px 10px 0px rgba(0,0,0,0.2);\n\n.character-single-image-wrapper {\n    margin-bottom: 30px;\n    .image-ratio-1 {\n        border-radius: 100%;\n    }\n}\n\n.character-page-field-title {\n    font-size: 10px;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-weight: 700;\n}\n\n.button-container {\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.button-container-cta-wrapper {\n    display: flex;\n    align-items: center;\n\n    .btn:first-of-type {\n        margin-left: 10px;\n    }\n}\n\n@media(max-width: 767.98px) {\n    padding: 15px;\n}\n\n`","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport HomepageScreen from './screens/HomepageScreen'\nimport PageNotFound from './screens/PageNotFound'\nimport CharacterScreen from './screens/CharacterScreen';\nimport CharacterSingleScreen from './screens/CharacterSingleScreen';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <>\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Switch>\n        <Route path=\"/\" exact component={HomepageScreen} />\n        <Route path=\"/character\" exact component={CharacterScreen} />\n        <Route path=\"/character/:id\" component={CharacterSingleScreen} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './global.scss'\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <Router>\n      <App />\n    </Router>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default-empty.6ae27f26.jpeg\";"],"sourceRoot":""}